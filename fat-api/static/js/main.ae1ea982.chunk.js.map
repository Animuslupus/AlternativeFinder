{"version":3,"sources":["i18n.js","config.js","helper.js","Components/AlternativeCard.js","Components/AlternativeList.js","Components/SearchBar.js","Components/AlternativeDetails.js","App.js","reportWebVitals.js","index.js"],"names":["resources","en","translation","de","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","appConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","eventDB","firestore","userId","cookie","load","a","ip","fetch","result","json","suf","results_mapped","map","x","name","category","alternatives","alt","description","pushEvent","eventType","params","publicIp","v4","fallbackUrls","eventData","type","ipAddress","createdAt","Timestamp","now","console","log","collection","add","capitalize","string","replace","c","toUpperCase","AlternativeCard","betterInPercentage","Math","round","this","props","product","alternative","Card","onClick","style","marginBottom","Content","Grid","columns","verticalAlign","Column","Image","maxHeight","width","size","src","textAlign","Icon","color","height","borderTop","Header","Meta","Trans","extra","React","Component","AlternativeList","callback","toString","shallow","renderAlternative","products","length","doubling","stretched","centered","p","getAlternatives","defaultProps","SearchBar","handleSearchChange","e","value","tmpMaxSearchLength","searchSuccessful","searchQuery","setState","loading","setTimeout","re","RegExp","state","filteredProducts","filter","test","results","resultRenderer","Label","imageLink","nextProps","nextContext","Container","margin","padding","Search","onResultSelect","data","onProductSelection","onSearchChange","AlternativeDetails","isOpen","undefined","Modal","open","onClose","Segment","emissions","unit","Divider","vertical","fontSize","paddingBottom","paddingTop","backgroundColor","as","paddingLeft","paddingRight","markdown","App","onCardClick","productName","productId","alternativeName","alternativeId","wasRecommended","productSelected","modalIsOpen","alternativeSelected","onModalClose","selectProduct","language","window","addEventListener","fetchProducts","then","changeLanguage","loadProducts","location","pathname","substring","indexArray","Array","keys","array","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","randomArray","i","push","Loader","fluid","inverted","randomProducts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mgBAOMA,EAAY,CACdC,GAAI,CACAC,Y,QAEJC,GAAI,CACAD,Y,SAIRE,IACKC,IAAIC,KACJC,KAAK,CACFP,YACAQ,IAAK,KAELC,cAAc,EAEdC,cAAe,CACXC,aAAa,KAIVP,QAAf,E,mKC3BMQ,EACQ,wBADRA,EAEe,8BAFfA,GAGK,EAaXC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInBR,IAASS,YAET,IAAMC,EAAUV,IAASW,Y,2BCjBnBC,E,OAASC,EAAOC,KAAK,U,4CAE3B,WAA6BnB,GAA7B,qBAAAoB,EAAA,6DACUC,EAAKjB,EAAkBA,EAAqBA,EADtD,SAEuBkB,MAAMD,EAAK,gBAFlC,cAEQE,EAFR,gBAGmBA,EAAOC,OAH1B,cAGID,EAHJ,OAMQE,EAAc,OAARzB,EAAe,UAAY,SACjC0B,EAAiBH,EAAOI,KAAI,SAACC,GAC7B,OAAO,2BACAA,GADP,IAEIC,KAAMD,EAAE,OAASH,GACjBK,SAAUF,EAAE,WAAaH,GACzBM,aAAcH,EAAC,aAAiBD,KAAI,SAAAK,GAChC,OAAO,YAAC,eACDA,GADP,IAEIH,KAAMG,EAAI,OAASP,GACnBK,SAAUE,EAAI,WAAaP,GAC3BQ,YAAaD,EAAI,cAAgBP,aAjBrD,kBAsBWC,GAtBX,6C,+BAyBeQ,E,8EAAf,WAAyBC,GAAzB,+BAAAf,EAAA,6DAAoCgB,EAApC,+BAA6C,GAA7C,SACqBC,IAASC,GAAG,CACzBC,aAAc,CAAC,4BAFvB,OACUlB,EADV,OAIUmB,EAAY,CACdC,KAAMN,EACNlB,OAAQA,GAAkB,GAC1ByB,UAAWrB,EACXsB,UAAWtC,IAASW,UAAU4B,UAAUC,MACxCT,OAAQA,GAEPhC,EAGD0C,QAAQC,IAAIP,GAFZzB,EAAQiC,WAAW,aAAaC,IAAIT,GAZ5C,4C,sBAqCA,SAASU,EAAWC,GAChB,OAAIA,EACOA,EAAOC,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,iBAE/BH,E,WCrBAI,E,4JAvCX,WAAU,IAAD,OACCC,EAAqBC,KAAKC,OAAQC,KAAKC,MAAMC,QAAX,UAAkCF,KAAKC,MAAME,YAAX,WAAuCH,KAAKC,MAAMC,QAAX,UAAmC,KACpJ,OACI,eAACE,EAAA,EAAD,CAAMC,QAAS,WAAQ,EAAKJ,MAAMI,QAAQ,EAAKJ,MAAMC,QAAS,EAAKD,MAAME,cAAzE,UACI,cAACC,EAAA,EAAD,CAAME,MAAO,CAAEC,aAAc,KAA7B,SACI,cAACH,EAAA,EAAKI,QAAN,UACI,eAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,SAAhC,UACI,cAACF,EAAA,EAAKG,OAAN,UACI,cAACC,EAAA,EAAD,CACIP,MAAO,CAAEQ,UAAW,GAAIC,MAAO,QAC/BC,KAAK,QACLC,IAAKjB,KAAKC,MAAMC,QAAX,cAGb,cAACO,EAAA,EAAKG,OAAN,CAAaM,UAAU,SAAvB,SACI,cAACC,EAAA,EAAD,CAAMjD,KAAK,qBAAqB8C,KAAK,MAAMI,MAAM,YAErD,cAACX,EAAA,EAAKG,OAAN,UACI,cAACC,EAAA,EAAD,CACIP,MAAO,CAAEe,OAAQ,GAAIN,MAAO,QAC5BC,KAAK,QACLC,IAAKjB,KAAKC,MAAME,YAAX,qBAMzB,eAACC,EAAA,EAAKI,QAAN,CAAcF,MAAO,CAAEgB,UAAW,GAAlC,UACI,cAAClB,EAAA,EAAKmB,OAAN,UAAchC,EAAWS,KAAKC,MAAME,YAAX,QACzB,eAACC,EAAA,EAAKoB,KAAN,WAAW,cAACC,EAAA,EAAD,0BAAX,IAAuClC,EAAWS,KAAKC,MAAMC,QAAX,YAEtD,eAACE,EAAA,EAAKI,QAAN,CAAckB,OAAK,EAACR,UAAU,SAA9B,UACKrB,EADL,KAC0B,cAAC4B,EAAA,EAAD,+B,GAvCZE,IAAMC,WCA9BC,E,uKAIF,SAAkB3B,EAAS7B,GACvB,OAAO,cAACoC,EAAA,EAAKG,OAAN,UAAmE,cAAC,EAAD,CAAiBP,QAASL,KAAKC,MAAM6B,SAAU5B,QAASA,EAASC,YAAa9B,KAA/HA,EAAG,GAAO0D,WAAa7B,EAAO,GAAO6B,c,6BAGlE,SAAgB7B,GAAU,IAAD,OACrB,OAAIF,KAAKC,MAAM+B,QACJhC,KAAKiC,kBAAkB/B,EAASA,EAAO,aAAiB,IAExDA,EAAO,aAAiBlC,KAAI,SAAAK,GAAG,OAAG,EAAK4D,kBAAkB/B,EAAS7B,Q,oBAGrF,WAAU,IAAD,OACL,OAAI2B,KAAKC,MAAMiC,UAAYlC,KAAKC,MAAMiC,SAASC,OAAS,GAAKnC,KAAKC,MAAMiC,SAAS,GAEzE,cAACzB,EAAA,EAAD,CAAM2B,UAAQ,EAACC,WAAS,EAACC,UAAQ,EAAC5B,QAAS,EAA3C,SACKV,KAAKC,MAAMiC,SAASlE,KAAI,SAAAuE,GAAC,OAAI,EAAKC,gBAAgBD,QAIpD,iC,GAvBeZ,IAAMC,WA2BpCC,EAAgBY,aAAe,CAC3BT,SAAS,GAGEH,Q,kBCwDAa,E,kDApFX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAkBV0C,mBAAqB,SAACC,EAAD,GAAmB,IAAbC,EAAY,EAAZA,MACnBA,EAAMV,QAAU,EAAKW,mBAAqB,GAAM,EAAKC,iBAIhDF,EAAMV,OAAS,EAAKW,mBACzB,EAAKA,mBAAqBD,EAAMV,OACX,GAAhBU,EAAMV,SACX,EAAKW,mBAAqB,EAC1B,EAAKC,kBAAmB,GAPxBxE,EAAU,eAAgB,CACtByE,YAAaH,IASrB,EAAKI,SAAS,CAAEJ,MAAOA,EAAOK,SAAS,IACvCC,YAAW,WAEP,IAAMC,EAAK,IAAIC,OAAO,EAAKC,MAAMT,MAAO,KAGlCU,EAAmB,EAAKD,MAAMpB,SAASsB,QAF7B,SAACX,GAAD,OAAWO,EAAGK,KAAKZ,EAAK,OAAaO,EAAGK,KAAKZ,EAAK,aAIlE,EAAKI,SAAS,CACVS,QAASH,EACTL,SAAS,MAEd,MA3CY,EA+CnBS,eAAiB,SAAC1F,GACd,OACI,8BACI,eAAC2F,EAAA,EAAD,WACK3F,EAAEC,KACH,qBAAK+C,IAAKhD,EAAE4F,kBAlDxB,EAAKP,MAAQ,CACTI,QAAS,GACTb,MAAO,GACPK,SAAS,EACThB,SAAUjC,EAAMiC,UAEpB,EAAKY,mBAAqB,EAC1B,EAAKC,kBAAmB,EATT,E,6DAYnB,SAA0Be,EAAWC,GACjC/D,KAAKiD,SAAS,CACVf,SAAU4B,EAAU5B,SACpBgB,SAAS,M,oBA4CjB,WAAU,IAAD,OACL,OACI,cAACc,EAAA,EAAD,CAAW1D,MAAO,CAAE2D,OAAQ,MAAOC,QAAS,OAA5C,SAEI,cAACC,EAAA,EAAD,CACIjB,QAASlD,KAAKsD,MAAMJ,QACpBkB,eAAgB,SAACxB,EAAGyB,GAChB,EAAKtB,kBAAmB,EACxB,EAAKE,SAAS,CACVJ,MAAOwB,EAAKzG,OAAOM,OAEvB,EAAK+B,MAAMqE,mBAAmBD,EAAKzG,SAGvC+F,eAAgB3D,KAAK2D,eACrBY,eAAgBvE,KAAK2C,mBACrBe,QAAS1D,KAAKsD,MAAMI,QACpBb,MAAO7C,KAAKsD,MAAMT,c,GA9EdlB,IAAMC,W,qDCoFf4C,G,kDAjFX,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IACDqD,MAAQ,CACTmB,QAAQ,EACRtE,YAAa,CACT0D,eAAWa,GAEfxE,QAAS,CACL2D,eAAWa,IARJ,E,6DAanB,SAA0BZ,EAAWC,GACjC/D,KAAKiD,SAAS,CACVwB,OAAQX,EAAUW,OAClBtE,YAAa2D,EAAU3D,YACvBD,QAAS4D,EAAU5D,Y,oBAI3B,WACI,GAAKF,KAAKC,MAAME,aAAgBH,KAAKC,MAAMC,QAEtC,CACD,IAAML,EAAqBC,KAAKC,OAAQC,KAAKC,MAAMC,QAAX,UAAkCF,KAAKC,MAAME,YAAX,WAAuCH,KAAKC,MAAMC,QAAX,UAAmC,KACpJ,OACI,cAACyE,EAAA,EAAD,CACIrC,UAAU,EACVsC,KAAM5E,KAAKsD,MAAMmB,OACjBI,QAAS7E,KAAKC,MAAM4E,QAHxB,SAII,eAACb,EAAA,EAAD,WACI,eAACc,EAAA,EAAD,CAASxE,MAAO,CAAE2D,OAAQ,GAA1B,UACI,eAACxD,EAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,SAAhC,UACI,cAACF,EAAA,EAAKG,OAAN,UACI,cAACC,EAAA,EAAD,CAAOP,MAAO,CAAE2D,OAAQ,OAAQnD,UAAW,IAAKC,MAAM,QAClDC,KAAK,QACLC,IAAKjB,KAAKsD,MAAMpD,QAAQ2D,cAGhC,cAACpD,EAAA,EAAKG,OAAN,UACI,cAACC,EAAA,EAAD,aAAOP,MAAO,CAAE2D,OAAQ,OAAOnD,UAAW,IAAKC,MAAM,QACjDC,KAAK,QACLC,IAAKjB,KAAKsD,MAAMpD,QAAQ2D,WAF5B,MAGS7D,KAAKsD,MAAMnD,YAAY0D,iBAIxC,eAACpD,EAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,SAAhC,UACI,cAACF,EAAA,EAAKG,OAAN,CAAaM,UAAU,SAAvB,SACI,8BACKlB,KAAKsD,MAAMpD,QAAQ6E,UADxB,IACoC/E,KAAKsD,MAAMpD,QAAQ8E,UAG3D,cAACvE,EAAA,EAAKG,OAAN,CAAaM,UAAU,SAAvB,SACI,8BACKlB,KAAKsD,MAAMnD,YAAY4E,UAD5B,IACwC/E,KAAKsD,MAAMnD,YAAY6E,aAIvE,cAACC,EAAA,EAAD,CAASC,UAAQ,EAAjB,SACI,cAAC/D,EAAA,EAAD,CAAMjD,KAAK,qBAAqBoC,MAAO,CAAE6E,SAAU,OAAS/D,MAAM,eAG1E,cAAC4C,EAAA,EAAD,CAAW1D,MAAO,CAAE8E,cAAe,MAAOC,WAAY,MAAOC,gBAAiB,WAAapE,UAAU,SAArG,SACI,eAACK,EAAA,EAAD,CAAQjB,MAAO,CAAEc,MAAO,QAAUmE,GAAG,KAArC,UAA2C1F,EAA3C,KAAgE,cAAC4B,EAAA,EAAD,0BAEpE,eAACuC,EAAA,EAAD,CAAW1D,MAAO,CAAEkF,YAAa,MAAOC,aAAc,MAAOL,cAAe,MAAOC,WAAY,OAA/F,UACI,eAAC9D,EAAA,EAAD,CAAQjB,MAAO,CAAEc,MAAO,WAAamE,GAAG,KAAxC,UAA8ChG,EAAWS,KAAKsD,MAAMpD,QAAQhC,MAA5E,IAAmF,cAACuD,EAAA,EAAD,uBAAnF,IAA4GlC,EAAWS,KAAKsD,MAAMnD,YAAYjC,SAC9I,4BACI,cAAC,IAAD,CAAkBwH,SAAU1F,KAAKsD,MAAMnD,YAAY7B,wBA/CvE,OAAQ,iC,GAzBaqD,IAAMC,WCsIxB+D,G,kDA5HX,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAgDV2F,YAAc,SAAC1F,EAASC,GACpB5B,EAAU,cAAe,CACrBsH,YAAa3F,EAAO,KAAU4F,UAAW5F,EAAO,GAChD6F,gBAAiB5F,EAAW,KAAU6F,cAAe7F,EAAW,GAChE8F,gBAAiB,EAAK3C,MAAM4C,kBAEhC,EAAKjD,SAAS,CACVkD,aAAa,EACbD,gBAAiBhG,EACjBkG,oBAAqBjG,KA1DV,EA8DnBkG,aAAe,WACX9H,EAAU,eAAgB,CACtBsH,YAAa,EAAKvC,MAAM4C,gBAAX,KAAoCJ,UAAW,EAAKxC,MAAM4C,gBAAX,GAC5DH,gBAAiB,EAAKzC,MAAM8C,oBAAX,KAAwCJ,cAAe,EAAK1C,MAAM8C,oBAAX,KAE5E,EAAKnD,SAAS,CAAEkD,aAAa,KAnEd,EAoFnBG,cAAgB,SAACpG,GACb3B,EAAU,0BAA2B,CACjCsH,YAAa3F,EAAO,KAAU4F,UAAW5F,EAAO,KAEpD,EAAK+C,SAAS,CAAEiD,gBAAiBhG,KAtFjC,EAAKoD,MAAQ,CACTpB,SAAU,GACVgB,SAAS,EACTgD,gBAAiB,KACjBE,oBAAqB,KACrBG,SAAU,KACVJ,aAAa,GAEjBK,OAAOC,iBAAiB,gBAAgB,SAAC7D,GACrCrE,EAAU,gBAXC,E,gDAiBnB,SAAalC,GAAM,IAAD,Q,4CACdqK,CAAcrK,GAAKsK,MAAK,SAAC/I,GACrB,EAAKqF,SAAS,CACVf,SAAUtE,EACVsF,SAAS,S,4BAOrB,SAAe7G,GACE,OAARA,GAA0B,OAARA,IACnB8C,QAAQC,IAAI,+BAAiC/C,GAC7CA,EAAM,MAGVJ,EAAK2K,eAAevK,GAAKsK,KACrB3G,KAAK6G,aAAaxK,IAGtBkC,EAAU,WAAY,CAAEgI,SAAUlK,IAClC2D,KAAKiD,SAAS,CACVsD,SAAUlK,M,+BAIlB,WACI2D,KAAK4G,eAAeJ,OAAOM,SAASC,SAASC,UAAU,M,4BAyB3D,WACI,GAAKhH,KAAKsD,MAAMpB,SAEX,CACD,IAAI+E,EAAU,YAAOC,MAAMlH,KAAKsD,MAAMpB,SAASC,QAAQgF,QACvDF,EL5CZ,SAAiBG,GAKb,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMjF,OAGlB,IAAMoF,GAGTD,EAAcxH,KAAK0H,MAAM1H,KAAK2H,SAAWF,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,EK2BcM,CAAQT,GAErB,IADA,IAAIU,EAAc,GACTC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAYE,KAAK7H,KAAKsD,MAAMpB,SAAS+E,EAAWW,KAEpD,OAAOD,EARP,OAAO,O,oBAmBf,WACI,OAAI3H,KAAKsD,MAAMJ,QACH,cAAC4E,EAAA,EAAD,IAGJ,eAAC9D,EAAA,EAAD,CAAW9C,UAAU,SAArB,UACI,eAAC8C,EAAA,EAAD,CAAW+D,OAAK,EAACzH,MAAO,CAAEgF,gBAAiB,UAAWD,WAAY,MAAOhE,OAAQ,IAAKd,aAAc,OAApG,UACI,cAACgB,EAAA,EAAD,CAAQyG,UAAQ,EAAhB,SACI,cAACvG,EAAA,EAAD,wBAEJ,cAAC,EAAD,CACIS,SAAUlC,KAAKsD,MAAMpB,SACrBoC,mBAAoBtE,KAAKsG,mBAGjC,cAAC,EAAD,CACItE,SAAUhC,KAAKsD,MAAM4C,gBACrBhE,SAAUlC,KAAKsD,MAAM4C,gBAAkB,CAAClG,KAAKsD,MAAM4C,iBAAmBlG,KAAKiI,iBAC3EnG,SAAU9B,KAAK4F,cAEnB,cAAC,GAAD,CACIf,QAAS7E,KAAKqG,aACd5B,OAAQzE,KAAKsD,MAAM6C,YACnBhG,YAAaH,KAAKsD,MAAM8C,oBACxBlG,QAASF,KAAKsD,MAAM4C,yB,GArH1BvE,IAAMC,WCHTsG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.ae1ea982.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEN from \"./languages/en/translation.json\"\nimport translationDE from \"./languages/de/translation.json\"\n// the translations\n\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    de: {\n        translation: translationDE\n    }\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"en\",\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;","import firebase from 'firebase';\n\nconst appConfig = {\n    devApiIp: \"http://127.0.0.1:4000\",\n    productionApiIp: \"alternatives.climateers.app\",\n    isDev: false \n}\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBbBgftjIRw97QbxUSDXDUkeVTJtrP4uQA\",\n    authDomain: \"climateers-429ca.firebaseapp.com\",\n    projectId: \"climateers-429ca\",\n    storageBucket: \"climateers-429ca.appspot.com\",\n    messagingSenderId: \"969502030102\",\n    appId: \"1:969502030102:web:7c30c30c43ea7a3cc8f837\",\n    measurementId: \"G-KMHHWHR8N8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst eventDB = firebase.firestore();\n\nexport { appConfig, firebase, eventDB };","import { appConfig, eventDB, firebase } from './config'\nimport publicIp from \"public-ip\"\nimport cookie from 'react-cookies'\n\nconst userId = cookie.load('userId');\n\nasync function fetchProducts(lng) {\n    const ip = appConfig.isDev ? appConfig.devApiIp : appConfig.productionApiIp;\n    let result = await fetch(ip + '/altproducts');\n    result = await result.json();\n\n\n    let suf = lng === 'en' ? 'English' : 'German';\n    let results_mapped = result.map((x) => {\n        return {\n            ...x,\n            name: x['name' + suf],\n            category: x['category' + suf],\n            alternatives: x['alternatives'].map(alt => {\n                return ({\n                    ...alt,\n                    name: alt['name' + suf],\n                    category: alt['category' + suf],\n                    description: alt['description' + suf],\n                })\n            })\n        }\n    });\n    return results_mapped\n}\n\nasync function pushEvent(eventType, params = {}) {\n    const ip = await publicIp.v4({\n        fallbackUrls: [\"https://ifconfig.co/ip\"]\n    })\n    const eventData = {\n        type: eventType,\n        userId: userId ? userId : '',\n        ipAddress: ip,\n        createdAt: firebase.firestore.Timestamp.now(),\n        params: params\n    }\n    if (!appConfig.isDev)\n        eventDB.collection(\"FATEvents\").add(eventData)\n    else\n        console.log(eventData)\n}\n\nfunction shuffle(array) {\n    // From: https://github.com/coolaj86/knuth-shuffle\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nfunction capitalize(string) {\n    if (string)\n        return string.replace(/^\\w/, (c) => c.toUpperCase());\n    else\n        return string\n}\n\nexport { fetchProducts, pushEvent, capitalize, shuffle };","import React from 'react'\nimport { Trans } from 'react-i18next';\nimport { Card, Grid, Icon, Image } from 'semantic-ui-react'\nimport { capitalize } from '../helper';\n\nclass AlternativeCard extends React.Component {\n\n    //this.props.product\n    //this.props.alternative\n\n    //TODO: fix language\n\n    render() {\n        const betterInPercentage = Math.round(((this.props.product['emissions'] - this.props.alternative['emissions']) / this.props.product['emissions']) * 100)\n        return (\n            <Card onClick={() => { this.props.onClick(this.props.product, this.props.alternative) }}>\n                <Card style={{ marginBottom: '0' }}>\n                    <Card.Content>\n                        <Grid columns={3} verticalAlign='middle'>\n                            <Grid.Column>\n                                <Image\n                                    style={{ maxHeight: 50, width: 'auto' }}\n                                    size='small'\n                                    src={this.props.product['imageLink']}\n                                />\n                            </Grid.Column>\n                            <Grid.Column textAlign='center'>\n                                <Icon name=\"angle double right\" size='big' color='black' />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image\n                                    style={{ height: 60, width: 'auto' }}\n                                    size='small'\n                                    src={this.props.alternative['imageLink']}\n                                />\n                            </Grid.Column>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n                <Card.Content style={{ borderTop: 0, }}>\n                    <Card.Header>{capitalize(this.props.alternative['name'])}</Card.Header>\n                    <Card.Meta><Trans>alternative</Trans> {capitalize(this.props.product['name'])}</Card.Meta>\n                </Card.Content>\n                <Card.Content extra textAlign=\"center\">\n                    {betterInPercentage}% <Trans>better</Trans>\n                </Card.Content>\n            </Card>\n        );\n    }\n}\n\nexport default AlternativeCard;","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport AlternativeCard from './AlternativeCard';\n\n\nclass AlternativeList extends React.Component {\n\n    // this.props.products\n\n    renderAlternative(product, alt) {\n        return <Grid.Column key={alt['id'].toString() + product['id'].toString()}><AlternativeCard onClick={this.props.callback} product={product} alternative={alt} /></Grid.Column>\n    }\n\n    getAlternatives(product) {\n        if (this.props.shallow)\n            return this.renderAlternative(product, product['alternatives'][0]) \n        else\n            return product['alternatives'].map(alt =>this.renderAlternative(product, alt)) \n    }\n\nrender() {\n    if (this.props.products && this.props.products.length > 0 && this.props.products[0])\n        return (\n            <Grid doubling stretched centered columns={4}>\n                {this.props.products.map(p => this.getAlternatives(p))}\n            </Grid>\n        )\n    else\n        return <></>\n}\n}\n\nAlternativeList.defaultProps = {\n    shallow: false\n}\n\nexport default AlternativeList","import React from 'react';\nimport '../index.css';\n\nimport { Container, Image, Search, Label } from 'semantic-ui-react'\nimport { pushEvent } from '../helper';\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: [],\n            value: '',\n            loading: false,\n            products: props.products,\n        };\n        this.tmpMaxSearchLength = 0;\n        this.searchSuccessful = false\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            products: nextProps.products,\n            loading: false,\n        });\n    }\n\n    handleSearchChange = (e, { value }) => {\n        if (value.length == this.tmpMaxSearchLength - 1 && !this.searchSuccessful)\n            pushEvent('FailedSearch', {\n                searchQuery: value\n            });\n        else if (value.length > this.tmpMaxSearchLength)\n            this.tmpMaxSearchLength = value.length\n        else if (value.length == 0){\n            this.tmpMaxSearchLength = 0\n            this.searchSuccessful = false\n        }\n\n        this.setState({ value: value, loading: true });\n        setTimeout(() => {\n\n            const re = new RegExp(this.state.value, 'i');\n            const isMatch = (value) => re.test(value['name']) || re.test(value['category']);\n\n            const filteredProducts = this.state.products.filter(isMatch);\n\n            this.setState({\n                results: filteredProducts,\n                loading: false\n            })\n        }, 300)\n\n    };\n\n    resultRenderer = (x) => {\n        return (\n            <div>\n                <Label>\n                    {x.name}\n                    <img src={x.imageLink} />\n                </Label>\n            </div>\n\n        )\n    };\n\n    render() {\n        return (\n            <Container style={{ margin: '2em', padding: '2em' }}>\n\n                <Search\n                    loading={this.state.loading}\n                    onResultSelect={(e, data) => {\n                        this.searchSuccessful = true\n                        this.setState({\n                            value: data.result.name\n                        });\n                        this.props.onProductSelection(data.result)\n                    }\n                    }\n                    resultRenderer={this.resultRenderer}\n                    onSearchChange={this.handleSearchChange}\n                    results={this.state.results}\n                    value={this.state.value}\n                />\n\n            </Container>\n        )\n    }\n}\n\nexport default SearchBar","import React from 'react';\n\nimport { Modal, Container, Image, Divider, Grid, Header, Segment, Icon } from 'semantic-ui-react'\nimport MarkdownRenderer from 'react-markdown-renderer'\nimport {capitalize} from '../helper'\nimport { Trans } from 'react-i18next';\n\nclass AlternativeDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            alternative: {\n                imageLink: undefined\n            },\n            product: {\n                imageLink: undefined\n            },\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            isOpen: nextProps.isOpen,\n            alternative: nextProps.alternative,\n            product: nextProps.product\n        });\n    }\n\n    render() {\n        if (!this.props.alternative || !this.props.product)\n            return (<></>)\n        else {\n            const betterInPercentage = Math.round(((this.props.product['emissions'] - this.props.alternative['emissions']) / this.props.product['emissions']) * 100)\n            return (\n                <Modal\n                    centered={false}\n                    open={this.state.isOpen}\n                    onClose={this.props.onClose}>\n                    <Container>\n                        <Segment style={{ margin: 0 }}>\n                            <Grid columns={2} verticalAlign='middle'>\n                                <Grid.Column >\n                                    <Image style={{ margin: 'auto', maxHeight: 200, width:'auto' }}\n                                        size='small'\n                                        src={this.state.product.imageLink}\n                                    />\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Image style={{ margin: 'auto',maxHeight: 200, width:'auto' }}\n                                        size='small'\n                                        src={this.state.product.imageLink}\n                                        src={this.state.alternative.imageLink}\n                                    />\n                                </Grid.Column>\n                            </Grid>\n                            <Grid columns={2} verticalAlign='middle'>\n                                <Grid.Column textAlign='center'>\n                                    <b>\n                                        {this.state.product.emissions} {this.state.product.unit}\n                                    </b>\n                                </Grid.Column>\n                                <Grid.Column textAlign='center'>\n                                    <b>\n                                        {this.state.alternative.emissions} {this.state.alternative.unit}\n                                    </b>\n                                </Grid.Column>\n                            </Grid>\n                            <Divider vertical>\n                                <Icon name=\"angle double right\" style={{ fontSize: '2em' }} color='black' />\n                            </Divider>\n                        </Segment>\n                        <Container style={{ paddingBottom: '1em', paddingTop: '1em', backgroundColor: '#1a531b' }} textAlign='center'>\n                            <Header style={{ color: '#fff' }} as='h3'>{betterInPercentage}% <Trans>better</Trans></Header>\n                        </Container>\n                        <Container style={{ paddingLeft: '20%', paddingRight: '20%', paddingBottom: '2em', paddingTop: '1em' }}>\n                            <Header style={{ color: '#1a531b' }} as='h2'>{capitalize(this.state.product.name)} <Trans>replaces</Trans> {capitalize(this.state.alternative.name)}</Header>\n                            <p>\n                                <MarkdownRenderer markdown={this.state.alternative.description} />\n                            </p>\n                        </Container>\n\n                    </Container>\n                </Modal>\n            )\n        }\n    }\n}\n\nexport default AlternativeDetails","import React from 'react';\n\n\nimport { Container, Header, Loader } from 'semantic-ui-react'\nimport { Trans } from 'react-i18next';\nimport i18n from './i18n';\n\nimport 'semantic-ui-css/semantic.min.css'\n\n\nimport AlternativeList from \"./Components/AlternativeList\";\nimport SearchBar from \"./Components/SearchBar\";\nimport AlternativeDetails from \"./Components/AlternativeDetails\";\nimport { pushEvent, fetchProducts, shuffle } from './helper';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            loading: true,\n            productSelected: null,\n            alternativeSelected: null,\n            language: 'en',\n            modalIsOpen: false\n        };\n        window.addEventListener(\"beforeunload\", (e) => {\n            pushEvent('UserLeave')\n        });\n\n    }\n\n\n    loadProducts(lng) {\n        fetchProducts(lng).then((result) => {\n            this.setState({\n                products: result,\n                loading: false,\n            });\n        })\n    }\n\n    //change lng of internatinalization package\n    //'en' or 'de' are the implemented languages\n    changeLanguage(lng) {\n        if ((lng !== 'en') && (lng !== 'de')) {\n            console.log(\"Unknown language parameter: \" + lng);\n            lng = 'en'\n        }\n\n        i18n.changeLanguage(lng).then(\n            this.loadProducts(lng)\n        );\n\n        pushEvent('UserJoin', { language: lng });\n        this.setState({\n            language: lng,\n        });\n    }\n\n    componentDidMount() {\n        this.changeLanguage(window.location.pathname.substring(1));\n        // this.loadProducts();\n    }\n\n    onCardClick = (product, alternative) => {\n        pushEvent('ViewDetails', {\n            productName: product['name'], productId: product['id'],\n            alternativeName: alternative['name'], alternativeId: alternative['id'],\n            wasRecommended: !this.state.productSelected\n        });\n        this.setState({\n            modalIsOpen: true,\n            productSelected: product,\n            alternativeSelected: alternative\n        })\n    }\n\n    onModalClose = () => {\n        pushEvent('CloseDetails', {\n            productName: this.state.productSelected['name'], productId: this.state.productSelected['id'],\n            alternativeName: this.state.alternativeSelected['name'], alternativeId: this.state.alternativeSelected['id'],\n        });\n        this.setState({ modalIsOpen: false })\n    }\n\n    randomProducts() {\n        if (!this.state.products)\n            return null\n        else {\n            var indexArray = [...Array(this.state.products.length).keys()]\n            indexArray = shuffle(indexArray)\n            var randomArray = []\n            for (var i = 0; i < 8; i++) {\n                randomArray.push(this.state.products[indexArray[i]])\n            }\n            return randomArray\n        }\n    }\n\n    selectProduct = (product) => {\n        pushEvent('searchedProductSelected', {\n            productName: product['name'], productId: product['id'],\n        });\n        this.setState({ productSelected: product })\n    }\n\n    render() {\n        if (this.state.loading)\n            return (<Loader />)\n        else {\n            return (\n                <Container textAlign=\"center\" >\n                    <Container fluid style={{ backgroundColor: '#1a531b', paddingTop: '1em', height: 200, marginBottom: '1em' }}>\n                        <Header inverted>\n                            <Trans>Welcome</Trans>\n                        </Header>\n                        <SearchBar\n                            products={this.state.products}\n                            onProductSelection={this.selectProduct}\n                        />\n                    </Container>\n                    <AlternativeList\n                        shallow={!this.state.productSelected}\n                        products={this.state.productSelected ? [this.state.productSelected] : this.randomProducts()}\n                        callback={this.onCardClick} />\n\n                    <AlternativeDetails\n                        onClose={this.onModalClose}\n                        isOpen={this.state.modalIsOpen}\n                        alternative={this.state.alternativeSelected}\n                        product={this.state.productSelected}\n                    />\n\n                </Container>\n            )\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}